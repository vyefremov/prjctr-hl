version: "3.8"

services:
  dotnet:
    container_name: dotnet-service-webapi
    build:
      context: ./dotnet-service/webapi
      dockerfile: Dockerfile
    expose:
      - 8080
    depends_on: 
      - mongodb
      - elasticsearch

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - "mongodbdata:/data/db"
      - "mongodbconfig:/data/configdb"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.2
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9300:9300"

  nginx:
    container_name: nginx
    build:
      context:  ./nginx
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    links:
      - dotnet

  telegraf:
    image: docker.io/telegraf:latest
    container_name: telegraf
    volumes:
      - ./tig/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - '127.0.0.1:8125:8125/udp'

  influxdb:
    image: arm64v8/influxdb:1.8.10
    container_name: influxdb
    env_file: ./tig/configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb

  grafana:
    image: grafana/grafana:8.0.2
    container_name: grafana
    env_file: ./tig/configuration.env
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./tig/grafana/provisioning/:/etc/grafana/provisioning/
      - ./tig/grafana/dashboards/:/var/lib/grafana/dashboards/

volumes:
  mongodbdata: {}
  mongodbconfig: {}
  grafana_data: {}
  influxdb_data: {}
    