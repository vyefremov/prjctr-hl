name: workflow.yml
on:
  push:
    branches:
      - 'hw25-ci-cd/**'

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      - name: Install GitVersion
        run: dotnet tool install --global GitVersion.Tool
      - name: Run GitVersion
        id: gitversion
        run: |
          dotnet-gitversion /output buildserver /outputfile version.json
          echo "::set-output name=version::$(cat version.json | jq -r '.MajorMinorPatchTag')"
  
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      - name: Restore Dependencies
        working-directory: './hw25-ci-cd/src'
        run: dotnet restore
      - name: Run Unit Tests
        working-directory: './hw25-ci-cd/src'
        run: dotnet test --filter FullyQualifiedName\!~IntegrationTests

  integration-tests:
    name: Integration Tests
    needs:
      - unit-tests
    runs-on: ubuntu-latest
    services: 
      mongo:
        image: mongo:7.0.11
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand("ping").ok' | mongosh --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      - name: Restore Dependencies
        working-directory: './hw25-ci-cd/src'
        run: dotnet restore
      - name: Run Integration Tests
        working-directory: './hw25-ci-cd/src'
        run: dotnet test --filter FullyQualifiedName\!~UnitTests
  
#  build-and-push-docker-image:
#    name: Build and Push Docker Image
#    needs:
#      - unit-tests
#      - integration-tests
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#        
#      - name: Login to Docker Hub
#        uses: docker/login-action@v4
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#          
#      - name: Build Docker Image
#        working-directory: './hw25-ci-cd/src/webapi'
#        run: docker build -t hw25-webapi .
#        
#      - name: Tag Docker Image
#        run: docker tag hw25-webapi ${{ secrets.DOCKER_USERNAME }}/hw25-webapi
#        
#      - name: Push Docker Image
#        run: docker push ${{ secrets.DOCKER_USERNAME }}/hw25-webapi
